# Macros:
#% macro, P, Device Prefix
#% macro, R, Device Suffix
#% macro, PORT, Asyn Port name
#% macro, TIMEOUT, Timeout
#% macro, ADDR, Asyn Port address

# Only 2 data types are supported, unsigned 8 and 16 bit integers
record(mbbo, "$(P)$(R)DataType")
{
   field(ZRST, "UInt8")
   field(ZRVL, "1")
   field(ONST, "UInt16")
   field(ONVL, "3")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbi, "$(P)$(R)DataType_RBV")
{
   field(ZRST, "UInt8")
   field(ZRVL, "1")
   field(ONST, "UInt16")
   field(ONVL, "3")
   field(TWST, "")
   field(TWVL, "")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

# Redefine the color mode choices from ADBase.template to only have those that the aravisCamera
# driver supports.  Keep the same values (xxVL), but change the menu numbers.

# Only Mono, Bayer and RGB1 color modes are supported at this time
record(mbbo, "$(P)$(R)ColorMode")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "Bayer")
   field(ONVL, "1")
   field(TWST, "RGB1")
   field(TWVL, "2")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbi, "$(P)$(R)ColorMode_RBV")
{
   field(ZRST, "Mono")
   field(ZRVL, "0")
   field(ONST, "Bayer")
   field(ONVL, "1")
   field(TWST, "RGB1")
   field(TWVL, "2")
   field(THST, "")
   field(THVL, "")
   field(FRST, "")
   field(FRVL, "")
   field(FVST, "")
   field(FVVL, "")
   field(SXST, "")
   field(SXVL, "")
   field(SVST, "")
   field(SVVL, "")
}

record(mbbo, "$(P)$(R)TriggerMode")
{
   field(ZRST, "Freerun")
   field(ZRVL, "0")
   field(ONST, "Line1")
   field(ONVL, "1")
   field(TWST, "Line2")
   field(TWVL, "2")
   field(THST, "Line3")
   field(THVL, "3")
   field(FRST, "Line4")
   field(FRVL, "4")
   field(FVST, "FixedRate")
   field(FVVL, "5")
   field(SXST, "Software")
   field(SXVL, "6")
   field(PINI, "NO")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
   field(ZRST, "Freerun")
   field(ZRVL, "0")
   field(ONST, "Line1")
   field(ONVL, "1")
   field(TWST, "Line2")
   field(TWVL, "2")
   field(THST, "Line3")
   field(THVL, "3")
   field(FRST, "Line4")
   field(FRVL, "4")
   field(FVST, "FixedRate")
   field(FVVL, "5")
   field(SXST, "Software")
   field(SXVL, "6")
}

record(ao, "$(P)$(R)Gain")
{
   field(PREC, "0")
}

record(ai, "$(P)$(R)Gain_RBV")
{
   field(PREC, "0")
   field(EGU,  "dB")   
}

record(mbbo, "$(P)$(R)GainAuto")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_GAINAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
}

record(mbbi, "$(P)$(R)GainAuto_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_GAINAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
   field(VAL,  "0")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)GainAutoTarget")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_GAINAUTOTARGET")
   field(DRVH, "100")
   field(DRVL, "0")
}

record(ai, "$(P)$(R)GainAutoTarget_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_GAINAUTOTARGET")
   field(SCAN, "I/O Intr")   
   field(EGU,  "%")   
}

record(mbbo, "$(P)$(R)WBAuto")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
}

record(mbbi, "$(P)$(R)WBAuto_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
   field(VAL,  "0")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)WBRed")
{
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBRED")
   field(DRVH, "3.1")
   field(DRVL, "0.8")
   field(PREC, "2")
}

record(ai, "$(P)$(R)WBRed_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBRED")
   field(PREC, "3")   
   field(SCAN, "I/O Intr")   
}

record(ao, "$(P)$(R)WBBlue")
{
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBBLUE")
   field(DRVH, "3.1")
   field(DRVL, "0.8")
   field(PREC, "2")   
}

record(ai, "$(P)$(R)WBBlue_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_WBBLUE")
   field(PREC, "3")   
   field(SCAN, "I/O Intr")   
}

record(mbbo, "$(P)$(R)ExpAuto")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
}

record(mbbi, "$(P)$(R)ExpAuto_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTO")
   field(ZRST, "Off")
   field(ZRVL, "1")
   field(ONST, "Once")
   field(ONVL, "3")
   field(TWST, "Continuous")
   field(TWVL, "2")
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)ExpAutoTarget")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTOTARGET")
   field(DRVH, "100")
   field(DRVL, "0")
}

record(ai, "$(P)$(R)ExpAutoTarget_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTOTARGET")
   field(SCAN, "I/O Intr")
   field(EGU,  "%")
}

record(mbbo, "$(P)$(R)ExpAutoAlg")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTOALG")
   field(ZRST, "Mean")
   field(ZRVL, "0")
   field(ONST, "FitRange")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)ExpAutoAlg_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_EXPAUTOALG")
   field(ZRST, "Mean")
   field(ZRVL, "0")
   field(ONST, "FitRange")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)IrisAuto")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISAUTO")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Video")
   field(ONVL, "2")
   field(TWST, "VideoOpen")
   field(TWVL, "3")
   field(THST, "VideoClosed")
   field(THVL, "4")   
}

record(mbbi, "$(P)$(R)IrisAuto_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISAUTO")
   field(ZRST, "Disabled")
   field(ZRVL, "0")
   field(ONST, "Video")
   field(ONVL, "2")
   field(TWST, "VideoOpen")
   field(TWVL, "3")
   field(THST, "VideoClosed")
   field(THVL, "4") 
   field(SCAN, "I/O Intr")
}

record(ao, "$(P)$(R)IrisAutoTarget")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISAUTOTARGET")
   field(DRVH, "100")
   field(DRVL, "0")
}

record(ai, "$(P)$(R)IrisAutoTarget_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISAUTOTARGET")
   field(SCAN, "I/O Intr") 
   field(EGU,  "%")
}

record(ai, "$(P)$(R)IrisVideoLevel_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISVIDEOLEVEL")
   field(SCAN, "I/O Intr")   
   field(EGU,  "mV pp")
}

record(ai, "$(P)$(R)IrisVideoLevelMin_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISVIDEOLEVELMIN")
   field(SCAN, "I/O Intr")   
   field(EGU,  "mV pp")   
}

record(ai, "$(P)$(R)IrisVideoLevelMax_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_IRISVIDEOLEVELMAX")
   field(SCAN, "I/O Intr") 
   field(EGU,  "mV pp")
}

record(mbbo, "$(P)$(R)UseTriggerMode")
{
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_TRIGGERMODE")
   field(ZRST, "Off")
   field(ZRVL, "0")
   field(ONST, "On")
   field(ONVL, "1")
}

record(mbbi, "$(P)$(R)UseTriggerMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ARAVIS_TRIGGERMODE")
   field(ZRST, "Off")
   field(ZRVL, "0")
   field(ONST, "On")
   field(ONVL, "1")
   field(SCAN, "I/O Intr")
}
